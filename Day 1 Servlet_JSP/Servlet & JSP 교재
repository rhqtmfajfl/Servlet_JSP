day 1


W3C는 HTML, HTTP 등의 표준화를 진행하고 있으며, 최근에는 시맨틱 웹에 관
련된 표준을 제정하고 있다




1.2 웹의 처리 구조

웹을 가지고 통신망을 구축 할때 서버는 서버대로 클라이언트는 클라이언트 대로

웹 통신에 사용되는 표준 통신 프로토콜은 HTTP(HyperText Transfer Protocol) 이다.


///////////////////////////////

3페이지


http는 요청은 클라이언트가
응답은 서버에서 한다 그러므로 http는 요청과 응답 에 대한 프로토콜이다.

클라이언트가 서버에 무엇을 요청 하던간에

랜더링 응답된 내용을 그대로 출력하는게 아니라 태그에 맞게 알맞게 보여주는것이다.





http는 connected oriented이다.

접속하고 통신하면 신뢰성있는 통신을 한다.  

신뢰성있는 통신을 한다.

http프로토콜은 stateless 방식으로 동작하는 프로토콜  접속한 상태를 계속 유지하지는 않는다.

stateless 방식을 채택함으로서 계속 접속상태를 유지하지 않고 여러 사람들과 연결 할 수 있게 해준다.





클라이언트 요청 방식
get 이 디폴트이다.  브라우저에서 요청은 거의 80프로가 get이다.   

하이퍼링크 
URI에 지정된 파일을 얻고자 할 때 사용되는 요청 방식으로 디폴트 방식이다. name=value로
구성되는 간단한 데이터(Query 문자열)를 URI 뒤에 추가하여 전달하면서 요청하고자 하는 경
우에도 사용된다. http://localhost:8080/test.jsp?productid=00001

post는 formtag가 요청할 때 get이다. post다 선택할 수 있다.

회원가입 정보가 중요한것 파일 업로드 post 방식이다.




//////////////



4페이지
Servlet과 jsp는  자바기반의 웹프로그래밍 기술이다.

servlet 하고 jsp는 servlet로 구현 할 수 있는건 jsp로 구현 가능 jsp로 구한 할 수 있는건 servlet 으로 구현 가능

자바 프로그램이 주인공인게 servlet

html이 주인공인게 jsp 이다.


주인 공이 누구냐 웹서버 프로그램으로 서 서버 상에서 자바 코드 응답코드 상에서의

자바가 베이스 인것 servlet html이 베이스 인것이 jsp 이다.   

웹상에서 기능구현이 많으면 servlet 이 더 났다

보여지는 것이 많으면 jsp가 더 났다.

그래서 이 두가지를 같이 사용해서 구현한다. 협업시킨 것이 mvc 패턴이다.

mvc패턴은 스프링 기반  

클라이언트 요청과 관련된것 은 servlet

응답과 관련된것은 jsp이다.




그래서 결론적으로 --------------------------->>>>>>> servlet과 jsp를 공부한뒤 mvc 패턴을 공부한다.




//////////////////////////////5페이지
5페이지
1.4 MVC(Model-View-Controller) 패턴
모델-뷰-컨트롤러(Model–View–Controller, MVC)는 소프트웨어 공학에서 사용되는 아키텍처 패턴으로서 이 패
턴을 성공적으로 사용하면, 사용자 인터페이스로부터 비즈니스 로직을 분리하여 어플리케이션의 시각적 요소
나 그 이면에서 실행되는 비즈니스 로직을 서로 영향 없이 쉽게 고칠 수 있는 어플리케이션을 만들 수 있다. 
MVC에서 모델은 어플리케이션의 정보(데이터)를 담당하며, 뷰는 텍스트, 체크박스 항목 등과 같은 사용자 인
터페이스 요소를 담당하고, 컨트롤러는 데이터와 비즈니스 로직 사이의 상호동작 관리하며 그리고 어플리케
이션의 기능을 담당한다.

/////

6페이지



컨트롤러는 servlet으로 model은 beans로 구현 한다.



///////////////
7페이지 
servlet 프로그래밍 


서블릿은 하나만 올려서 공유한다.




Servlet 의 구현 방법
Servlet 은 HttpServlet 이라는 클래스를 상속하여 구현하며 어떠한 요청 방식을 지원하는 Servlet 인가에 따라
doGet() 또는 doPost() 메서드를 오버라이딩하여 구현한다



////////////

▣ Servlet의 등록과 매핑

매핑할 때 서블릿이름과 똑같은 이름으로 매핑해도 된다.

서블릿은 매핑방법을 써서 처리되도록 하는데





/////////////////
9페이지

[ Servlet 3.0 부터 추가된 Annotation ]
Servlet 3.0 에서는 web.xml 에 작성되던 Servlet 등록과 매핑, 초기 파라미터 설정, 리스너나 필터 등록과 같은
내용들을 소스 내에서 Annotation 구문으로 대신할 수 있는 구현 방법을 지원하고 있다. 즉, Annotation 을 사
용하면 web.xml 에 일일이 설정 태그를 작성해주지 않아도 된다. 다음은 Servlet 3.0에서 지원되는 Annoation 
리스트이다.
@WebServlet: Servlet 프로그램을 등록과 매핑을 정의한다.
@WebInitParam: Servlet 프로그램에 전달할 초기 파라미터를 정의한다.
@WebListener: 리스너를 정의한다.
@WebFilter: 필터를 정의한다.
@MultipartConfig: Servlet 프로그램에서 다중 파티션으로 전달되는 파일 업로드를 처리할 수 있음을 정의한
다




- 정의 예
@WebServlet("/hello")
public class Hello1Servlet extends HttpServlet { ...... }


@WebServlet(urlPatterns = {"/hello1", "/hello2"})  //서블릿 명은 하난데 매핑명을 하나 이상 등록하는것도 가능하다.
public class Hello2Servlet extends HttpServlet { ...... }

매핑명은 보안과 다른 것과 충돌적인 부분


///////////
10페이지

▣ 요청 및 응답 객체 생성
웹 클라이언트로부터 Servlet 수행 요청이 전달되면, Servlet 컨테이너는 클라이언트로부터 전달된 요청 정보를
가지고 HttpServletRequest 객체와 HttpServletResponse 객체를 생성하여 Servlet 의 doGet() 또는 doPost() 메
서드 호출시 아규먼트로 전달한다.
HttpServletRequest 객체는 클라이언트에서 전달되는 다양한 요청 정보를 Servlet 에 전달하는 기능으로 사용
되며, HttpServletResponse 객체는 클라이언트로의 응답에 사용되는 객체이다.




Tomcat은 WAS이다. 

WAS란 웹 애플리케이션 서버 WEB Application Server 를 의미 한다.

WAS는 WEB SERVER + Application Server

--------------------------------------------------
                                      Servlet Container + JSP Converter의 기능이다.
                                        SERVLET CONTIANER
                                        
                                        객체 생성되어있으면 이미 생성되어있는 객체를 찾는다.      ---->>>> 제일 처음 INIT 호출 그다음 DO POST나 DO GET 호출 한다.
                                      WAS가 메인 클래스이므로 MAIN을 제공한다.
                                      
                                      웹클라이언트 서버는뭐가 도움이 된다.?????
                        
                              
                                      서비스 메소드에게 RESPONSE나 REQUEST를 주면 DOGET이나 DOPOST를 호출 한다.
                          
                              


