18 

▣ 요청 재지정
요청재지정이란 클라이언트에서 요청한 페이지 대신 다른 페이지를 클라이언트가 보게 되는 기능으로서
redirect 방법과 forward 방법으로 나뉜다. 


- redirect : HttpServletResponse 의 sendRedirect() 메서드를 사용한다.


- forward : RequestDispatcher 의 forward() 메서드를 사용한다.





forward는 클라이언트가 노란서블릿을 요청하는데 노란애가 요청을 빨간애 한테 넘겨서 빨간색이 대신대답한다.

그런데 클라이언트는 그렇게 된사실을 모른다.
클라이언트 요청을 재지정

클라이언트 입장에서는 누가 응답했늕는 안중요하다 서버 단에서만 클라이언트 모르게 응답할 대상을 노란애가 우선 받는다.
받아서 이번 요청은 쟤가 하면 좋겠다 하고 요청을 넘기는 것이다.

실제 서버상에서는 이런일이 많이 일어난다


- 동일한 요청상에서 다른 자원에 요청을 넘겨
서 대신 응답하게 함
- 동일한 서버의 동일 웹 어플리케이션에 존재
하는 대상만 가능
- 브라우저의 주소필드의 URL 이 바뀌지 않음
- 두 자원이 HttpServletRequest 객체 공유




redirect 클라이언트가 요청을 해왓을 때 우선 노란애가 클라이언트에게 응답한다.

원래는 성공적으로 클라이언트가 원하는 컨탠트는 200 이라는 의미는 success 응답 줄것이다라는 의미
이때는 302라는 응답 코드와 함께 url을 준다. 빨간색에 대한url을 받으면 같이 전달된 url을 다시 요청해서 끌어간다.


점선은 클ㄹ아이너트의 의지와 관계없이 웹서버와 브라우저간의 약속에 의한 interaction이다.

302가 오는 경우 301 이 오는 경우 url도 같이 와서 브라우저는 그걸 받자마자 다시 요청한다. 

redircet는 두탕뛰는 결과가 된다.

결국은 브라우저가  한번의 요청에 의해서 노란애를 거쳐서 빨간색이 응답하는 forward와 다르게
redircet는 왔다갔다를 두번 한다.

forward는 제한이 잇는데 같은 웹 프로젝트에 있는 애만 대상이 될 수 잇다.

같은 프로젝트의 같은 프로젝트에 있는 애만 forward 할 수 있다.

같은 영역에 있는 것만 forward 할 수 있다.




클라이언트가 보내온 커리나 시간이나 이런저런이유로 다른 클라이언트로 대신 응답해야 한느 경우 리 다이랙트를 사용한다.

- 다른 자원을 다시 요청하여 응답하게 함
- Web 상의 모든 페이지로 요청재지정 가능
- 브라우저의 주소필드의 URL 이 바뀜
- 재지정 대상에 대한 요청 자체를 브라우저가 하게 됨
- 두 자원이 HttpServletRequest 객체를 공유하지 않음












